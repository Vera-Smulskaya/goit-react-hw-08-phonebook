{"version":3,"file":"static/js/948.a1fe024d.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","../node_modules/nanoid/url-alphabet/index.js","webpack://goit-react-hw-08-phonebook/./src/components/Title/Title.module.css?a947","components/Title/Title.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","redux/filter/filter.selector.js","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","redux/contacts/contacts.selector.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__mrNq5\"};","import React from 'react';\nimport css from './Title.module.css';\n\nconst Filter = ({ children }) => {\n  return <p className={css.title}>{children}</p>;\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"ContactForm_formContainer__TWEE2\",\"form\":\"ContactForm_form__dhl+T\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formLabelText\":\"ContactForm_formLabelText__N5qA+\",\"formButton\":\"ContactForm_formButton__TN6Jq\"};","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport Title from '../Title/Title';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts.reducer';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(state => state.contactsStore.contacts);\n  const dispatch = useDispatch();\n\n  const handleFormContact = (name, number) => {\n    if (contacts.find(contact => contact.name === name)) {\n      alert('This contact is already in the phonebook');\n      return;\n    }\n    const finalContacts = {\n      id: nanoid(),\n      name,\n      phone,\n    };\n    dispatch(addContact(finalContacts));\n    setName('');\n    setPhone('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    handleFormContact(name, phone);\n  };\n\n  const handleInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n\n    switch (name) {\n      case 'name': {\n        setName(value);\n        break;\n      }\n      case 'phone': {\n        setPhone(value);\n        break;\n      }\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div className={css.formContainer}>\n      <Title>Contact Form</Title>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label className={css.formLabel}>\n          <p className={css.formLabelText}>Name: </p>\n          <input\n            type=\"text\"\n            className={css.formInput}\n            name=\"name\"\n            value={name}\n            onChange={handleInputChange}\n            placeholder=\"Name Surname\"\n            required\n          ></input>\n        </label>\n        <label className={css.formLabel}>\n          <p className={css.formLabelText}>Number: </p>\n          <input\n            type=\"tel\"\n            className={css.formInput}\n            name=\"phone\"\n            value={phone}\n            onChange={handleInputChange}\n            placeholder=\"Format: xxx-xxx-xx-xx\"\n            pattern=\"^\\+?\\d{1,4}[ .\\-]?\\(?\\d{1,3}\\)?[ .\\-]?\\d{1,4}[ .\\-]?\\d{1,4}[ .\\-]?\\d{1,9}$\"\n            required\n          ></input>\n        </label>\n        <button type=\"submit\" className={css.formButton}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListContainer\":\"ContactList_contactListContainer__Mco5m\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactContainer\":\"ContactListItem_contactContainer__0rcmw\",\"contactName\":\"ContactListItem_contactName__kCRjB\",\"contactNumber\":\"ContactListItem_contactNumber__QRtzo\",\"contactButton\":\"ContactListItem_contactButton__SfQ8Z\"};","import React from 'react';\nimport css from './ContactListItem.module.css';\n\nconst ContactListItem = ({ contact, deleteContact }) => {\n  return (\n    <div className={css.contactContainer}>\n      <p className={css.contactName}>\n        {contact.name}:{' '}\n        <span className={css.contactNumber}>{contact.phone}</span>\n      </p>\n      <button\n        className={css.contactButton}\n        onClick={() => deleteContact(contact.id)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default ContactListItem;\n","export const selectFilterTerm = state => state.filterStore.filterTerm;\n","import React from 'react';\nimport css from './ContactList.module.css';\nimport Title from '../Title/Title';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\nimport { deleteContact } from '../../redux/contacts/contacts.reducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilterTerm } from '../../redux/filter/filter.selector';\n\nconst ContactList = () => {\n  const contacts = useSelector(state => state.contactsStore.contacts);\n  const filterTerm = useSelector(selectFilterTerm);\n  const dispatch = useDispatch();\n\n  const deletedContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const availableContacts = () => {\n    return contacts.filter(\n      contact =>\n        typeof contact.name === 'string' &&\n        contact.name.toLowerCase().includes(filterTerm.toLowerCase())\n    );\n  };\n\n  const listOfContacts = availableContacts();\n\n  return (\n    <div className={css.contactListContainer}>\n      <Title>Contacts</Title>\n      {listOfContacts.map(contact => (\n        <ContactListItem\n          contact={contact}\n          key={contact.id}\n          deleteContact={deletedContact}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filter_filterContainer__8G57N\",\"filterLabelText\":\"Filter_filterLabelText__--6ov\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilterTerm } from '../../redux/filter/filter.selector';\nimport { setFilterTerm } from '../../redux/filter/filter.reducer';\n\nconst Filter = () => {\n  const filterTerm = useSelector(selectFilterTerm);\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    dispatch(setFilterTerm(event.target.value));\n  };\n  return (\n    <form className={css.filterContainer}>\n      <label className={css.filterLabel}>\n        <p className={css.filterLabelText}>Find contacts by name: </p>\n        <input\n          type=\"text\"\n          className={css.filterInput}\n          name=\"filter\"\n          value={filterTerm}\n          onChange={changeFilter}\n        ></input>\n      </label>\n    </form>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import React from 'react';\nimport css from './Section.module.css';\n\nconst Section = ({ children }) => {\n  return <div className={css.section}>{children}</div>;\n};\n\nexport default Section;\n","export const selectContacts = state => state.contactsStore.contacts;\nexport const selectIsLoading = state => state.contactsStore.isLoading;\nexport const selectError = state => state.contactsStore.error;\n","import React from 'react';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport Section from '../../components/Section/Section';\nimport Title from '../../components/Title/Title';\nimport { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from '../../redux/contacts/contacts.selector';\nimport Loader from '../../components/Loader/Loader';\n\nexport default function HomePage() {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      <Section>\n        <Title>Phonebook</Title>\n        <ContactForm />\n      </Section>\n      <Section>\n        <Filter />\n        {error !== null && <p className=\"textError\">{error}</p>}\n        {isLoading && <Loader />}\n        {contacts.length !== 0 && <ContactList />}\n      </Section>\n    </>\n  );\n}\n"],"names":["nanoid","size","arguments","length","undefined","id","bytes","crypto","getRandomValues","Uint8Array","_ref","children","_jsx","className","css","ContactForm","name","setName","useState","phone","setPhone","contacts","useSelector","state","contactsStore","dispatch","useDispatch","handleInputChange","event","value","target","_jsxs","formContainer","Title","onSubmit","preventDefault","handleFormContact","number","find","contact","alert","finalContacts","addContact","form","formLabel","formLabelText","type","formInput","onChange","placeholder","required","pattern","formButton","deleteContact","onClick","selectFilterTerm","filterStore","filterTerm","ContactList","deletedContact","contactId","listOfContacts","filter","toLowerCase","includes","map","ContactListItem","Filter","filterContainer","filterLabel","filterLabelText","filterInput","setFilterTerm","selectContacts","selectIsLoading","isLoading","selectError","error","HomePage","_Fragment","Section","Loader"],"sourceRoot":""}